# This workflow is triggered when a tag is pushed to main branch
# It will:
# - Build the project and generate a nuget package
# - Publish it to Github Packages and Nuget.org Packages repositories
# - Create a Github release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release
jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 7
      - name: Build project
        run: dotnet build -c Release
      - name: Generate package
        run: |
          dotnet pack --no-build --include-symbols -c Release -o .build/nuget -p:RepositoryBranch=${{github.ref}} -p:RepositoryCommit=${{github.sha}}
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: packages
          path: .build/nuget

  publish-to-github:
    name: Publish to Github
    needs: build
    runs-on: ubuntu-latest
    env:
      NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 7
          source-url: https://nuget.pkg.github.com/Field-Advantage/index.json
      - name: Download Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: packages
          path: .
      - name: Publish package
        run: |
          dotnet nuget push *.nupkg --skip-duplicate

  publish-to-nuget:
    name: Publish to NuGet
    needs: build
    runs-on: ubuntu-latest
    env:
      NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 7
      - name: Download Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: packages
          path: .
      - name: Publish package
        run: |
          dotnet nuget push *.nupkg -k $NUGET_AUTH_TOKEN -sk $NUGET_AUTH_TOKEN --skip-duplicate -s https://api.nuget.org/v3/index.json

  create-github-release:
    name: Create Github release
    needs: [publish-to-github, publish-to-nuget]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "latest"
          title: "Release ${{ github.ref }}"
          draft: false
          # Prerelease if tag contains `-` character
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            *.nupkg
